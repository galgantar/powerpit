#pragma once

struct Vertex
{
	gm::vec3 position;
	gm::vec3 normal;
	gm::vec2 texCoord;
};

class Primitive
{
public:
	std::vector<Vertex> vertices;
	std::vector<unsigned int> indices;

	Primitive() {};
	~Primitive() = default;
};


class Quad : public Primitive
{
public:
	Quad()
		: Primitive()
	{
		vertices = {
			// positions                // normals             // texcoords
			{ { -0.5f,  0.5f, 0.0f},   { 0.0f, 0.0f, 1.0f },  { 0.0f, 1.0f } },
			{ { -0.5f, -0.5f, 0.0f},   { 0.0f, 0.0f, 1.0f },  { 0.0f, 0.0f } },
			{ {  0.5f, -0.5f, 0.0f},   { 0.0f, 0.0f, 1.0f },  { 1.0f, 0.0f } },
			{ {  0.5f,  0.5f, 0.0f},   { 0.0f, 0.0f, 1.0f },  { 1.0f, 1.0f } }
		};

		indices = {
			0, 1, 2,
			0, 2, 3
		};
	}
};


class Cube : public Primitive
{
public:
    Cube::Cube()
        : Primitive()
    {
        vertices = {
            // position                   // normals               // texCoord
            { { -0.5f, -0.5f, -0.5f },   { 0.0f,  0.0f, -1.0f  },   { 0.0f, 0.0f } },
            { {  0.5f, -0.5f, -0.5f },   { 0.0f,  0.0f, -1.0f  },   { 1.0f, 0.0f } },
            { {  0.5f,  0.5f, -0.5f },   { 0.0f,  0.0f, -1.0f  },   { 1.0f, 1.0f } },
            { {  0.5f,  0.5f, -0.5f },   { 0.0f,  0.0f, -1.0f  },   { 1.0f, 1.0f } },
            { { -0.5f,  0.5f, -0.5f },   { 0.0f,  0.0f, -1.0f  },   { 0.0f, 1.0f } },
            { { -0.5f, -0.5f, -0.5f },   { 0.0f,  0.0f, -1.0f  },   { 0.0f, 0.0f } },

            { { -0.5f, -0.5f,  0.5f },   { 0.0f,  0.0f, 1.0f   },   { 0.0f, 0.0f } },
            { {  0.5f, -0.5f,  0.5f },   { 0.0f,  0.0f, 1.0f   },   { 1.0f, 0.0f } },
            { {  0.5f,  0.5f,  0.5f },   { 0.0f,  0.0f, 1.0f   },   { 1.0f, 1.0f } },
            { {  0.5f,  0.5f,  0.5f },   { 0.0f,  0.0f, 1.0f   },   { 1.0f, 1.0f } },
            { { -0.5f,  0.5f,  0.5f },   { 0.0f,  0.0f, 1.0f   },   { 0.0f, 1.0f } },
            { { -0.5f, -0.5f,  0.5f },   { 0.0f,  0.0f, 1.0f   },   { 0.0f, 0.0f } },

            { { -0.5f,  0.5f,  0.5f },   { -1.0f,  0.0f,  0.0f },   { 1.0f, 0.0f } },
            { { -0.5f,  0.5f, -0.5f },   { -1.0f,  0.0f,  0.0f },   { 1.0f, 1.0f } },
            { { -0.5f, -0.5f, -0.5f },   { -1.0f,  0.0f,  0.0f },   { 0.0f, 1.0f } },
            { { -0.5f, -0.5f, -0.5f },   { -1.0f,  0.0f,  0.0f },   { 0.0f, 1.0f } },
            { { -0.5f, -0.5f,  0.5f },   { -1.0f,  0.0f,  0.0f },   { 0.0f, 0.0f } },
            { { -0.5f,  0.5f,  0.5f },   { -1.0f,  0.0f,  0.0f },   { 1.0f, 0.0f } },

            { {  0.5f,  0.5f,  0.5f },   { 1.0f,  0.0f,  0.0f  },   { 1.0f, 0.0f } },
            { {  0.5f,  0.5f, -0.5f },   { 1.0f,  0.0f,  0.0f  },   { 1.0f, 1.0f } },
            { {  0.5f, -0.5f, -0.5f },   { 1.0f,  0.0f,  0.0f  },   { 0.0f, 1.0f } },
            { {  0.5f, -0.5f, -0.5f },   { 1.0f,  0.0f,  0.0f  },   { 0.0f, 1.0f } },
            { {  0.5f, -0.5f,  0.5f },   { 1.0f,  0.0f,  0.0f  },   { 0.0f, 0.0f } },
            { {  0.5f,  0.5f,  0.5f },   { 1.0f,  0.0f,  0.0f  },   { 1.0f, 0.0f } },

            { { -0.5f, -0.5f, -0.5f },   { 0.0f, -1.0f,  0.0f  },   { 0.0f, 1.0f } },
            { {  0.5f, -0.5f, -0.5f },   { 0.0f, -1.0f,  0.0f  },   { 1.0f, 1.0f } },
            { {  0.5f, -0.5f,  0.5f },   { 0.0f, -1.0f,  0.0f  },   { 1.0f, 0.0f } },
            { {  0.5f, -0.5f,  0.5f },   { 0.0f, -1.0f,  0.0f  },   { 1.0f, 0.0f } },
            { { -0.5f, -0.5f,  0.5f },   { 0.0f, -1.0f,  0.0f  },   { 0.0f, 0.0f } },
            { { -0.5f, -0.5f, -0.5f },   { 0.0f, -1.0f,  0.0f  },   { 0.0f, 1.0f } },

            { { -0.5f,  0.5f, -0.5f },   { 0.0f,  1.0f,  0.0f  },   { 0.0f, 1.0f } },
            { {  0.5f,  0.5f, -0.5f },   { 0.0f,  1.0f,  0.0f  },   { 1.0f, 1.0f } },
            { {  0.5f,  0.5f,  0.5f },   { 0.0f,  1.0f,  0.0f  },   { 1.0f, 0.0f } },
            { {  0.5f,  0.5f,  0.5f },   { 0.0f,  1.0f,  0.0f  },   { 1.0f, 0.0f } },
            { { -0.5f,  0.5f,  0.5f },   { 0.0f,  1.0f,  0.0f  },   { 0.0f, 0.0f } },
            { { -0.5f,  0.5f, -0.5f },   { 0.0f,  1.0f,  0.0f  },   { 0.0f, 1.0f } }
        };

        // dirty hack
        indices = {
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
            16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35
        };
    }
};